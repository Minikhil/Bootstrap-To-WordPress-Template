class ArrayIterator
	private a_
	private i_
	private l_
	
	public sub init (a, l)
		a_ = a
		l_ = l
		i_ = -1
	end sub
	
	public function has_next
		has_next = (i_ < l_)
	end function
	
	public function move_next
		i_ = i_ + 1
	end function
	
	public function value
		if isObject(a_(i_)) then
			set value = a_(i_)
		else
			value = a_(i_)
		end if
	end function
end class

class DateTimeIterator
	private current_
	private finish_
	private increment_
	
	public sub init (start, finish, increment)
		set current_ = start
		set finish_ = finish
		set increment_ = increment
	end sub
	
	public function has_next
		has_next = (current_.cmp(finish_) <= 0)
	end function
	
	public function move_next
		set current_ = current_.plus(increment_)
	end function
	
	public function value
		set value = current_
	end function
end class

class IteratorsModule
	public function array (a)
		set array = new ArrayIterator
		array.init a, uBound(a) + 1
	end function
	
	public function array_len (a, l)
		set array = new ArrayIterator
		array.init a, l
	end function
	
	public function datetime (start, finish, increment)
		set datetime = new DateTimeIterator
		datetime.init start, finish, increment
	end function
end class
dim Iterators: set Iterators = new IteratorsModule